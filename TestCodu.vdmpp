class TestCodu

types    
    public VectHospitals = seq of Hospital;
    public VectEmergency = seq of Emergency;

operations
    private assertTrue: bool ==> ()
        assertTrue(cond) == return
    pre cond;
        
    private createCodu: () ==> ()
    createCodu() ==
    (
        dcl codu : CODU := new CODU();
        
        -- Add hospitals
        dcl hosp1 : Hospital := new Hospital( new Location(1, 2) );
        dcl hosp2 : Hospital := new Hospital( new Location(10, 2) );
        dcl tmpHospital : Hospital;
        dcl tmpTransport : Transport;
        dcl available : VectHospitals := [];
        dcl emergency : Emergency;
        
        -- Transport
        hosp1.pushTransport( new Transport(<EmergencyCar>) );
        hosp1.pushTransport( new Transport(<Ambulance>) );
        hosp1.pushTransport( new Transport(<Heli>) );
        hosp2.pushTransport( new Transport(<Heli>) );
        
        codu.pushHospital( hosp1 );
        codu.pushHospital( hosp2 );
        
        -- Emergency
        emergency := new Emergency(
                new Location(1, 3), 
                new Patient("Pacient", <Male>, 23, <Serious>, <Stroke>, 960000), 
                <Easy> 
        );
        
        codu.pushEmergency(emergency);
               
        available := codu.getAvailableHospitals( codu.hospitals, emergency );
               
        tmpHospital := codu.getClosestHospital( available, emergency.location );
        
        tmpTransport := codu.getBestVeihicle( 
            tmpHospital.transports, 
            emergency.time, 
            tmpHospital.location.calculate_distance(emergency.location) 
        );
        
        --IO`println( available ); 
        IO`println( tmpTransport ); 
        
        
        
       
    
        -- Asserts
        assertTrue( 1 = 1 );
    );

    public static main: () ==> ()
    main() ==
    (
        new TestCodu().createCodu();
    );
    
    
end TestCodu

